"""Программа для создания фэйковых профилей. По запросу от пользователя есть ли
образование и какой желателен пол, создаются данные: имя, фамилия, город проживания,
город обучения (если есть образование), год рождения, логин и пароль."""
from random import choices
from transliterate import translit
from random import sample
import random

name_woman = ['Агния', 'Аделина', 'Аида', 'Аксинья', 'Александра',
              'Алена', 'Алина', 'Алиса', 'Алия', 'Алла', 'Альбина',
              'Амелия', 'Амина', 'Анастасия', 'Ангелина', 'Анна',
              'Антонина', 'Ариана', 'Арина', 'Валентина', 'Валерия',
              'Варвара', 'Василина', 'Василиса', 'Вера', 'Вероника',
              'Виктория', 'Виолетта', 'Владислава', 'Галина', 'Дарина',
              'Дарья', 'Диана', 'Дина', 'Ева', 'Евангелина', 'Евгения',
              'Екатерина', 'Елена', 'Елизавета', 'Есения', 'Жанна',
              'Зарина', 'Злата', 'Илона', 'Инна', 'Ирина', 'Камилла',
              'Карина', 'Каролина', 'Кира', 'Клавдия', 'Кристина', 'Ксения',
              'Лариса', 'Лейла', 'Лиана', 'Лидия', 'Лилия', 'Лина', 'Лия',
              'Любовь', 'Людмила', 'Майя', 'Маргарита', 'Марина', 'Мария',
              'Мелания', 'Мила', 'Милана', 'Мирослава', 'Надежда', 'Наталья',
              'Нелли', 'Ника', 'Нина', 'Оксана', 'Олеся', 'Ольга', 'Полина',
              'Регина', 'Руслана', 'Сабина', 'Сара', 'Светлана', 'Святослава',
              'София', 'Стефания', 'Таисия', 'Тамара', 'Татьяна', 'Ульяна',
              'Эвелина', 'Элина', 'Эльвира', 'Эльмира', 'Эмилия', 'Юлия',
              'Яна', 'Ярослава']  # женские имена
name_man = ['Александр', 'Дмитрий', 'Максим', 'Сергей', 'Андрей', 'Алексей',
            'Артём', 'Илья', 'Кирилл', 'Михаил', 'Никита', 'Матвей',
            'Роман', 'Егор', 'Арсений', 'Иван', 'Денис', 'Евгений',
            'Даниил', 'Тимофей', 'Владислав', 'Игорь', 'Владимир',
            'Павел', 'Руслан', 'Марк', 'Константин', 'Тимур', 'Олег',
            'Ярослав', 'Антон', 'Николай', 'Глеб', 'Данил', 'Савелий',
            'Вадим', 'Степан', 'Юрий', 'Богдан', 'Артур', 'Семен', 'Макар',
            'Лев', 'Виктор', 'Елисей', 'Виталий', 'Вячеслав', 'Захар', 'Мирон',
            'Дамир', 'Георгий', 'Давид', 'Платон', 'Анатолий', 'Григорий',
            'Демид', 'Данила', 'Станислав', 'Василий', 'Федор', 'Родион',
            'Леонид', 'Одиссей', 'Валерий', 'Святослав', 'Борис', 'Эдуард',
            'Марат', 'Герман', 'Даниэль', 'Петр', 'Амир', 'Всеволод',
            'Мирослав', 'Гордей', 'Артемий', 'Эмиль', 'Назар', 'Савва',
            'Ян', 'Рустам', 'Игнат', 'Влад', 'Альберт', 'Тамерлан', 'Айдар',
            'Роберт', 'Адель', 'Марсель', 'Ильдар', 'Самир', 'Тихон', 'Рамиль',
            'Ринат', 'Радмир', 'Филипп', 'Арсен', 'Ростислав', 'Святогор',
            'Яромир']   # мужские имена
surname_woman = ['Иванова', 'Петрова', 'Смирнова', 'Кузнецова', 'Васильева',
                 'Попова', 'Новикова', 'Волкова', 'Романова', 'Козлова',
                 'Соколова', 'Андреева', 'Морозова', 'Николаева', 'Михайлова',
                 'Павлова', 'Алексеева', 'Макарова', 'Сергеева', 'Егорова',
                 'Орлова', 'Александрова', 'Степанова', 'Никитина', 'Лебедева',
                 'Зайцева', 'Захарова', 'Яковлева', 'Максимова', 'Фролова',
                 'Григорьева', 'Шевченко', 'Миронова', 'Мельникова',
                 'Борисова', 'Кузьмина', 'Дмитриева', 'Федорова', 'Семенова',
                 'Антонова', 'Медведева', 'Полякова', 'Матвеева', 'Тарасова',
                 'Власова', 'Жукова', 'Коваленко', 'Ильина', 'Богданова',
                 'Бондаренко']  # женские фамилии
surname_man = ['Кравченко', 'Сергеевич', 'Сорокин', 'Данилов', 'Власов',
               'Богданов', 'Фёдоров', 'Семёнов', 'Котов', 'Чернов',
               'Денисов', 'Колесников', 'Карпов', 'Алиев', 'Абрамов',
               'Титов', 'Баранов', 'Давыдов', 'Осипов', 'Гусев', 'Фомин',
               'Назаров', 'Белый', 'Тимофеев', 'Филиппов', 'Тихонов', 'Ткаченко',
               'Куликов', 'Гончаров', 'Марков', 'Беляев', 'Исаев', 'Калинин',
               'Бойко', 'Гаврилов', 'Федотов', 'Мельник', 'Ефимов', 'Коновалов',
               'Афанасьев', 'Филатов', 'Казаков', 'Комаров', 'Щербаков',
               'Наумов', 'Виноградов', 'Савельев', 'Быков', 'Ковалев',
               'Соловьев']   # мужские фамилии
city = ['Москва', 'Санкт-Петербург', 'Новосибирск', 'Екатеринбург', 'Казань',
        'Нижний Новгород', 'Челябинск', 'Самара', 'Омск', 'Ростов-на-Дону',
        'Уфа', 'Красноярск', 'Воронеж', 'Краснодар', 'Пермь', 'Волгоград',
        'Саратов', 'Тюмень', 'Тольятти', 'Ижевск', 'Барнаул', 'Ульяновск',
        'Иркутск', 'Хабаровск', 'Махачкала', 'Ярославль', 'Владивосток',
        'Оренбург', 'Томск', 'Кемерово', 'Новокузнецк', 'Рязань', 'Набережные Челны',
        'Астрахань', 'Киров', 'Пенза', 'Севастополь', 'Балашиха', 'Липецк']   # город проживания
city_education = ['Москва', 'Санкт-Петербург', 'Новосибирск', 'Екатеринбург', 'Казань',
                  'Нижний Новгород', 'Челябинск', 'Самара', 'Омск', 'Ростов-на-Дону',
                  'Уфа', 'Красноярск', 'Воронеж', 'Краснодар', 'Пермь', 'Волгоград',
                  'Саратов', 'Тюмень', 'Тольятти', 'Ижевск', 'Барнаул', 'Ульяновск',
                  'Иркутск', 'Хабаровск', 'Махачкала', 'Ярославль', 'Владивосток',
                  'Оренбург', 'Томск', 'Кемерово', 'Новокузнецк', 'Рязань', 'Набережные Челны',
                  'Астрахань', 'Киров', 'Пенза', 'Севастополь', 'Балашиха', 'Липецк']   # город обучения
x = ['@Box.az', '@Byke.com', '@Chez.com', '@Email.ru', '@Gmail.com', '@GMX.net/mail/',
     '@Goldmail.ru', '@Inet.ua', '@Loveemail.com', '@BigMailBox.com', '@Bigmir.net',
     '@Mail.com', '@Mail.E1.ru', '@Mail.Gala.NET', '@lycos.com', '@Rambler.ru',
     '@Mail.ru', '@Tut.by', '@Yahoo.com', '@Yandex.ru', '@Netaddress.com', '@Newmail.net',
     '@Nicknames.com', '@Outlook.live.com', '@Post.cz', '@Spam.lv', '@TechEmail.com', '@UA.fm',
     '@WebMail.AOL.com', '@Meta.ua']     # почтовые сервисы
asd = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K',
       'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
       'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
       'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
       'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4', '5', '6',
       '7', '8', '9', '0', '+', '-', '/', '*', '!', '&', '$', '#', '?',
       '=', '@', '<', '>']   # для генерации пароля
length = 8    # длинна пароля
education = input('Есть образование (введите Y если да, N если нет) >>> ').lower()
gender = input('Введите пол W если женский, M если мужской >>> ').lower()
my_x = choices(x)  # случайный выбор почтового сервиса


def my_func():
    if gender == 'w':
        my_name = choices(name_woman)   # случайный выбор имени
        my_surname = choices(surname_woman)
        age = random.randrange(1990, 2005)       # дата рождения
        my_login = "".join(my_name) + '.' + "".join(my_surname)   # составление имени и фамилии для создания логина
        my_login_eng = translit(my_login, language_code='ru', reversed=True)   # перевод на английский
        my_login_eng_1 = "".join(my_login_eng) + '.' + "".join(str(age)) + "".join(my_x)   # создание логина с датой
        # рождения и почтовым сервисом
        print(f'Имя и фамилия: {"".join(my_login)}, \nГод рождения: {age}, \nЛогин: {"".join(my_login_eng_1)}')  #
        # вывод данных
    elif gender == 'm':   # все тоже самое но для мужчин
        my_name_1 = choices(name_man)
        my_surname_1 = choices(surname_man)
        age = random.randrange(1990, 2005)
        my_login_men = "".join(my_name_1) + '.' + "".join(my_surname_1)
        my_login_men_eng = translit(my_login_men, language_code='ru', reversed=True)
        my_login_men_eng_1 = "".join(my_login_men_eng) + '.' + "".join(str(age)) + "".join(my_x)
        print(f'Имя и фамилия: {"".join(my_login_men)}, \nГод рождения: {age}, \nЛогин:{"".join(my_login_men_eng_1)}')
    if education == 'y':    # обработка запроса по образованию
        my_city_education = choices(city_education)
        print(f'Город образования: {"".join(my_city_education)}')
    else:
        print('нет образование')

    my_city = choices(city)
    s = ''.join(sample(asd, length))   # генерация пароля
    return f'Город проживания: {"".join(my_city)}, \nПароль: {s}'


print(my_func())
